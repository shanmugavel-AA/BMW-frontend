import { useState, useEffect, useRef } from "react";
import { NavLink, useLocation } from "react-router-dom";


const megaMenu = [
  {
    label: "Digital Marketing Services",
    link: "/digital-marketing-services-in-dubai",
    items: [
      {
        label: "Search Engine Optimization",
        link: "/seo-company-in-dubai",
      },
      {
        label: "Social Media Marketing",
        link: "/social-media-marketing-in-dubai",
      },
      {
        label: "Search Engine Marketing",
        link: "/search-engine-marketing-in-dubai",
      },
      {
        label: "Content Marketing",
        link: "/content-marketing-in-dubai",
      },
      { label: "Email Marketing", link: "/email-marketing-in-dubai" },
      {
        label: "Influencer Marketing",
        link: "/influencer-marketing-in-dubai",
      },
      { label: "Video Production", link: "/video-production-in-dubai" },
      { label: "Brand Strategy", link: "/brand-strategy-in-dubai" },
    ],
  },
  {
    label: "Graphic Design Services",
    link: "/graphic-design-services-in-dubai",
    items: [
      { label: "Logo Design", link: "/logo-design-in-dubai" },
      { label: "Banner Design", link: "/banner-design-in-dubai" },
      {
        label: "Brochure Design",
        link: "/brochure-design-in-dubai",
      },
      {
        label: "Flyer Design",
        link: "/flyer-design-in-dubai",
      },
      {
        label: "Package Design",
        link: "/package-design-in-dubai",
      },
      {
        label: "Business Card Design",
        link: "/business-card-design-in-dubai",
      },
      // add a divider if you want
      { type: "divider" }, // for a visual break
      {
        label: "Web Design Services",
        link: "/web-design-services-in-dubai",
        items: [
          { label: "UI UX Design", link: "/ui-ux-design-in-dubai" },
          { label: "Website Redesign", link: "/website-redesign-in-dubai" },
        ],
      },
    ],
  },
  {
    label: "Website Development", link: "/website-development-services-in-dubai",
  },
];


const businessSolutions = [
  "Real Estate",
  "Healthcare",
  "Education",
  "Retail",
  "FMCG",
  "Automobile",
  "Banking",
  "IT/Tech",
  "Jewelry",
];


export default function Header() {
  const [showMegaMenu, setShowMegaMenu] = useState(false);
  const [showBusinessDropdown, setShowBusinessDropdown] = useState(false);
  const [scrolled, setScrolled] = useState(false);
  const location = useLocation();
  const currentPath = location.pathname;
  const menuRef = useRef(null);
  const businessDropdownRef = useRef(null);
  const businessCloseTimerRef = useRef(null);
  const closeTimerRef = useRef(null); // ref to hold timer


  useEffect(() => {
    const handleScroll = () => setScrolled(window.scrollY > 50);
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);


  useEffect(() => {
    const handleClickOutside = (e) => {
      if (menuRef.current && !menuRef.current.contains(e.target)) {
        setShowMegaMenu(false);
      }
      if (
        businessDropdownRef.current &&
        !businessDropdownRef.current.contains(e.target)
      ) {
        setShowBusinessDropdown(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, []);


  // MegaMenu handlers
  const handleMouseEnter = () => {
    if (closeTimerRef.current) {
      clearTimeout(closeTimerRef.current);
      closeTimerRef.current = null;
    }
    setShowMegaMenu(true);
  };


  const handleMouseLeave = () => {
    closeTimerRef.current = setTimeout(() => {
      setShowMegaMenu(false);
    }, 250);
  };


  // Business dropdown handlers
  const handleBusinessMouseEnter = () => {
    if (businessCloseTimerRef.current) {
      clearTimeout(businessCloseTimerRef.current);
      businessCloseTimerRef.current = null;
    }
    setShowBusinessDropdown(true);
  };


  const handleBusinessMouseLeave = () => {
    businessCloseTimerRef.current = setTimeout(() => {
      setShowBusinessDropdown(false);
    }, 250);
  };


  const handleLinkClick = () => {
    setShowMegaMenu(false);
    setShowBusinessDropdown(false);
  };


  return (
    <header
      className={`fixed top-8 left-8 right-8 z-50 backdrop-blur-md shadow-md transition-all duration-300 ${
        scrolled ? "bg-primary bg-opacity-95" : "bg-white bg-opacity-40"
      } rounded-lg`}
      style={{
        marginLeft: "30vh",
        marginRight: "30vh",
      }}
    >
      <div className="px-6 py-4 flex justify-center items-center space-x-12 relative">
        <NavLink
          to="/"
          className={`text-2xl font-bold cursor-pointer ${
            scrolled ? "text-secondary" : "text-primary"
          }`}
        >
          BrandLogo
        </NavLink>


        <nav className="flex items-center space-x-8">
          <NavLink to="/" className="group font-medium hover:text-accent" exact>
            Home
          </NavLink>


          <NavLink
            to="/about"
            className="group font-medium hover:text-accent"
          >
            About Us
          </NavLink>


          <div
            className="relative"
            ref={menuRef}
            onMouseEnter={handleMouseEnter}
            onMouseLeave={handleMouseLeave}
          >
            <button className="font-medium hover:text-accent">Services</button>


            {showMegaMenu && (
              <div className="absolute top-10 left-1/2 -translate-x-1/4 mt-2 w-[900px] bg-white shadow-lg rounded-2xl py-10 px-14 flex gap-10 z-50 border border-gray-100">
                {megaMenu.map((section, idx) => {
                  const items = section.items || [];
                  const isActiveSection =
                    items.some((item) => item.link === currentPath) ||
                    section.link === currentPath;


                  return (
                    <div key={idx} className="flex-1 min-w-[140px]">
                      <NavLink
                        to={section.link || "#"}
                        className={`block font-semibold mb-4 text-base tracking-wide ${
                          isActiveSection
                            ? "text-accent font-bold"
                            : "text-gray-900"
                        } hover:text-accent transition`}
                        onClick={handleLinkClick}
                      >
                        {section.label}
                      </NavLink>


                      {items.length > 0 && (
                        <ul className="flex flex-col gap-2">
                          {items.map((item, i) => {
                            if (item.type === "divider") {
                              return (
                                <hr key={i} className="my-1 border-gray-200" />
                              );
                            }
                            if (item.items) {
                              return (
                                <div key={i} className="mt-3">
                                  <NavLink
                                    to={item.link || "#"}
                                    className="font-semibold mb-2 text-base block hover:text-accent transition"
                                    onClick={handleLinkClick}
                                  >
                                    {item.label}
                                  </NavLink>
                                  <ul className="flex flex-col gap-2">
                                    {item.items.map((subitem, j) => (
                                      <li key={j}>
                                        <NavLink
                                          to={subitem.link}
                                          className="block px-2 py-1 rounded-lg text-sm text-gray-700 hover:text-accent hover:bg-gray-50"
                                          onClick={handleLinkClick}
                                        >
                                          {subitem.label}
                                        </NavLink>
                                      </li>
                                    ))}
                                  </ul>
                                </div>
                              );
                            }


                            // standard item
                            return (
                              <li key={i}>
                                <NavLink
                                  to={item.link}
                                  className="block px-2 py-1 rounded-lg text-sm text-gray-700 hover:text-accent hover:bg-gray-50"
                                  onClick={handleLinkClick}
                                >
                                  {item.label}
                                </NavLink>
                              </li>
                            );
                          })}
                        </ul>
                      )}


                      {items.length === 0 && (
                        <div className="mt-6 text-gray-400 text-sm italic px-2">
                          {/* Empty or placeholder if needed */}
                        </div>
                      )}
                    </div>
                  );
                })}
              </div>
            )}
          </div>


          <div
            className="relative"
            ref={businessDropdownRef}
            onMouseEnter={handleBusinessMouseEnter}
            onMouseLeave={handleBusinessMouseLeave}
          >
            <button className="font-medium hover:text-accent">
              Business Solutions
            </button>


            {showBusinessDropdown && (
              <ul className="absolute top-10 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-100 py-2 z-50">
                {businessSolutions.map((solution, idx) => (
                  <li key={idx}>
                    <NavLink
                      to={`/${solution.toLowerCase().replace(/\s/g, "-")}`}
                      className="block px-4 py-2 text-gray-700 hover:bg-gray-100 hover:text-accent transition"
                      onClick={handleLinkClick}
                    >
                      {solution}
                    </NavLink>
                  </li>
                ))}
              </ul>
            )}
          </div>


          <NavLink
            to="/blog"
            className="group font-medium hover:text-accent"
          >
            Blog
          </NavLink>


          <NavLink
            to="/contact"
            className="group font-medium hover:text-accent"
          >
            Contact Us
          </NavLink>
        </nav>
      </div>
    </header>
  );
}

here the current highlighting for items is not comming

import { useState, useRef, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { Link } from "react-router-dom";


const Header = () => {

  const navigate = useNavigate();
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const [showServices, setShowServices] = useState(false);
  const [showBusiness, setShowBusiness] = useState(false);
  const [showCompany, setShowCompany] = useState(false);
  const servicesTimeout = useRef();
  const businessTimeout = useRef();
  const companyTimeout = useRef();
  const headerRef = useRef(null);

  const handleScroll = () => {
    if (headerRef.current) {
      if (window.scrollY > 0) {
        // When scrolling down: blend with semi-transparent black
        headerRef.current.style.backgroundColor = 'rgba(2, 2, 2, 0.68)';
      } else {
        // When at top: solid color (white or your theme color)
        headerRef.current.style.backgroundColor = '';
      }
    }
  };

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);
    handleScroll();
    return () => {window.removeEventListener("scroll", handleScroll);
    }
    }, []);

  // Helper for dropdown trigger
  const handleDropdown = (type, show = "hover") => {
    let setShow, timeoutRef;
    if (type === "services") {
      setShow = setShowServices;
      timeoutRef = servicesTimeout;
    } else if (type === "business") {
      setShow = setShowBusiness;
      timeoutRef = businessTimeout;
    } else if (type === "company") {
      setShow = setShowCompany;
      timeoutRef = companyTimeout;
    }
    clearTimeout(timeoutRef.current);
    if (show) {
      setShow(true);
    } else {
      timeoutRef.current = setTimeout(() => setShow(false), 200);
    }
  };

  const handleService = () => {
    navigate("/services");
  }
  const handleBusiness = () => {
    navigate("/business-solutions");
  }

  return (
    <header className="bg-black shadow-md sticky top-0 z-50 transition-all duration-300"
    ref={headerRef}
    >
      {/* Main nav */}
      <div className="w-full py-6 px-4 md:px-8 lg:px-16 flex justify-between items-center">
        <Link
          to="/"
          className="text-2xl font-extrabold tracking-tight text-white space-x-4 transition-colors"
        >
          YourCompany
        </Link>

        {/* Desktop Nav */}
        <nav className="hidden md:flex space-x-4 text-base font-community-sans items-center relative">
          <Link
            to="/"
            className="hover:text-accent transition-colors py-2 px-2 rounded-lg text-white"
          >
            Home
          </Link>
          {/* Services Dropdown */}
          <div
            className="relative"
            data-dropdown-trigger="hover"
            onMouseEnter={(e) => {
              if (
                e.currentTarget.getAttribute("data-dropdown-trigger") ===
                "hover"
              ) {
                handleDropdown("services", true, "hover");
              }
            }}
            onMouseLeave={(e) => {
              if (
                e.currentTarget.getAttribute("data-dropdown-trigger") ===
                "hover"
              ) {
                handleDropdown("services", false, "hover");
              }
            }}
          >
            <button
              className="hover:text-accent flex items-center gap-1 transition-colors py-2 px-2 rounded-lg text-white"
              onClick={handleService}
              type="button"
              aria-haspopup="true"
              aria-expanded={showServices}
            >
              Services <span className="text-xs">▼</span>
            </button>
            <div
              className={`absolute top-full left-0 mt-3 w-80 bg-black p-5 z-50 grid grid-cols-1 gap-3 transition-all duration-300 origin-top scale-95 opacity-0 pointer-events-none
                ${
                  showServices
                    ? "scale-100 opacity-100 pointer-events-auto animate-dropdown"
                    : ""
                } hover:bg-black transition-colors`}
              style={{ minWidth: "16rem" }}
              onMouseEnter={(e) => {
                if (
                  e.currentTarget.parentElement.getAttribute(
                    "data-dropdown-trigger"
                  ) === "hover"
                ) {
                  handleDropdown("services", true, "hover");
                }
              }}
              onMouseLeave={(e) => {
                if (
                  e.currentTarget.parentElement.getAttribute(
                    "data-dropdown-trigger"
                  ) === "hover"
                ) {
                  handleDropdown("services", false, "hover");
                }
              }}
            >
              <Link
                to="/services/seo"
                className="hover:text-accent transition-colors text-white"
              >
                SEO & Content Strategy
              </Link>
              <Link
                to="/services/social-media"
                className="hover:text-accent transition-colors text-white"
              >
                Social Media Marketing
              </Link>
              <Link
                to="/services/performance"
                className="hover:text-accent transition-colors text-white"
              >
                Performance Marketing
              </Link>
              <Link
                to="/services/influencer"
                className="hover:text-accent transition-colors text-white"
              >
                Influencer Marketing
              </Link>
              <Link
                to="/services/web-development"
                className="hover:text-accent transition-colors text-white"
              >
                Web Development
              </Link>
              <Link
                to="/services/branding"
                className="hover:text-accent transition-colors text-white"
              >
                Branding & Identity
              </Link>
              <Link
                to="/services/video"
                className="hover:text-accent transition-colors text-white"
              >
                Video Marketing
              </Link>
              <Link
                to="/services/automation"
                className="hover:text-accent transition-colors text-white"
              >
                Marketing Automation
              </Link>
            </div>
          </div>
          {/* Business Dropdown */}
          <div
            className="relative"
            data-dropdown-trigger="hover"
            onMouseEnter={(e) => {
              if (
                e.currentTarget.getAttribute("data-dropdown-trigger") ===
                "hover"
              ) {
                handleDropdown("business", true, "hover");
              }
            }}
            onMouseLeave={(e) => {
              if (
                e.currentTarget.getAttribute("data-dropdown-trigger") ===
                "hover"
              ) {
                handleDropdown("business", false, "hover");
              }
            }}
          >
            <button
              className="hover:text-accent flex items-center gap-1 transition-colors py-2 px-2 rounded-lg text-white"
              onClick={handleBusiness}
              type="button"
              aria-haspopup="true"
              aria-expanded={showBusiness}
            >
              Business Solutions <span className="text-xs">▼</span>
            </button>
            <div
              className={`absolute top-full left-0 mt-3 w-72 bg-black p-5 z-50 grid grid-cols-1 gap-3 transition-all duration-300 origin-top scale-95 opacity-0 pointer-events-none
                ${
                  showBusiness
                    ? "scale-100 opacity-100 pointer-events-auto animate-dropdown"
                    : ""
                } hover:bg-black transition-colors`}
              style={{ minWidth: "14rem" }}
              onMouseEnter={(e) => {
                if (
                  e.currentTarget.parentElement.getAttribute(
                    "data-dropdown-trigger"
                  ) === "hover"
                ) {
                  handleDropdown("business", true, "hover");
                }
              }}
              onMouseLeave={(e) => {
                if (
                  e.currentTarget.parentElement.getAttribute(
                    "data-dropdown-trigger"
                  ) === "hover"
                ) {
                  handleDropdown("business", false, "hover");
                }
              }}
            >
              <Link
                to="/business-solutions/ecommerce"
                className="hover:text-accent transition-colors text-white"
              >
                E-Commerce & D2C
              </Link>
              <Link
                to="/business-solutions/retail"
                className="hover:text-accent transition-colors text-white"
              >
                FMCG & Retail
              </Link>
              <Link
                to="/business-solutions/finance"
                className="hover:text-accent transition-colors text-white"
              >
                Banking & Financial
              </Link>
              <Link
                to="/business-solutions/startups"
                className="hover:text-accent transition-colors text-white"
              >
                Growth Startups
              </Link>
              <Link
                to="/business-solutions/healthcare"
                className="hover:text-accent transition-colors text-white"
              >
                Healthcare
              </Link>
              <Link
                to="/business-solutions/education"
                className="hover:text-accent transition-colors text-white"
              >
                Education
              </Link>
              <Link
                to="/business-solutions/real-estate"
                className="hover:text-accent transition-colors text-white"
              >
                Real Estate
              </Link>
            </div>
          </div>
          {/* Company Dropdown */}
          <div
            className="relative"
            data-dropdown-trigger="hover"
            onMouseEnter={(e) => {
              if (
                e.currentTarget.getAttribute("data-dropdown-trigger") ===
                "hover"
              ) {
                handleDropdown("company", true, "hover");
              }
            }}
            onMouseLeave={(e) => {
              if (
                e.currentTarget.getAttribute("data-dropdown-trigger") ===
                "hover"
              ) {
                handleDropdown("company", false, "hover");
              }
            }}
          >
            <button
              className="hover:text-accent flex items-center gap-1 transition-colors py-2 px-2 rounded-lg text-white"
              type="button"
              aria-haspopup="true"
              aria-expanded={showCompany}
            >
              Company <span className="text-xs">▼</span>
            </button>
            <div
              className={`absolute top-full left-0 mt-3 w-56 bg-secondary p-5 z-50 grid grid-cols-1 gap-3 transition-all duration-300 origin-top scale-95 opacity-0 pointer-events-none
                ${
                  showCompany
                    ? "scale-100 opacity-100 pointer-events-auto animate-dropdown"
                    : ""
                } hover:bg-secondary transition-colors`}
              style={{ minWidth: "12rem" }}
              onMouseEnter={(e) => {
                if (
                  e.currentTarget.parentElement.getAttribute(
                    "data-dropdown-trigger"
                  ) === "hover"
                ) {
                  handleDropdown("company", true, "hover");
                }
              }}
              onMouseLeave={(e) => {
                if (
                  e.currentTarget.parentElement.getAttribute(
                    "data-dropdown-trigger"
                  ) === "hover"
                ) {
                  handleDropdown("company", false, "hover");
                }
              }}
            >
              <Link
                to="/faq"
                className="hover:text-accent transition-colors text-primary"
              >
                FAQ
              </Link>
              <Link
                to="/about"
                className="hover:text-accent transition-colors text-primary"
              >
                About Us
              </Link>
              <Link
                to="/testimonials"
                className="hover:text-accent transition-colors text-primary"
              >
                Testimonials
              </Link>
              <Link
                to="/case-study"
                className="hover:text-accent transition-colors text-primary"
              >
                CaseStudy
              </Link>
            </div>
          </div>
          <Link
            to="/careers"
            className="hover:text-accent transition-colors py-2 px-2 rounded-lg text-white"
          >
            Careers
          </Link>
          <Link
            to="/blog"
            className="hover:text-accent transition-colors py-2 px-2 rounded-lg text-white"
          >
            Blog
          </Link>
          <Link
            to="/contact"
            className="hover:text-accent transition-colors py-2 px-2 rounded-lg text-white"
          >
            Contact
          </Link>
        </nav>

        {/* Mobile Hamburger */}
        <button
          className="md:hidden text-3xl focus:outline-none p-2 text-white"
          onClick={() => setIsMenuOpen(!isMenuOpen)}
          aria-label="Open menu"
        >
          ☰
        </button>
      </div>

      {/* Mobile Menu */}
      {isMenuOpen && (
        <div className="md:hidden bg-white shadow-2xl fixed top-0 left-0 w-full h-full z-50 animate-fade-in flex flex-col">
          <div className="flex justify-between items-center px-4 py-4 border-b">
            <span className="text-2xl font-extrabold text-accent">
              YourCompany
            </span>
            <button
              className="text-3xl focus:outline-none"
              onClick={() => setIsMenuOpen(false)}
              aria-label="Close menu"
            >
              ×
            </button>
          </div>
          <nav className="flex flex-col space-y-2 p-6 text-base font-medium flex-1 overflow-y-auto text-black">
            <Link
              to="/"
              className="hover:text-accent transition-colors py-2"
              onClick={() => setIsMenuOpen(false)}
            >
              Home
            </Link>
            {/* Mobile Services Dropdown */}
            <div>
              <button
                className="w-full text-left hover:text-accent flex items-center gap-1 transition-colors py-2"
                onClick={() => setShowServices(!showServices)}
                type="button"
                aria-haspopup="true"
                aria-expanded={showServices}
              >
                Services{" "}
                <span className="text-xs">{showServices ? "▲" : "▼"}</span>
              </button>
              <div
                className={`ml-2 mt-1 flex flex-col gap-1 transition-all duration-300 origin-top scale-95 opacity-0 max-h-0 overflow-hidden
                  ${
                    showServices
                      ? "scale-100 opacity-100 max-h-[500px] animate-dropdown"
                      : ""
                  }`}
              >
                <Link
                  to="/services/seo"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  SEO & Content Strategy
                </Link>
                <Link
                  to="/services/social-media"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Social Media Marketing
                </Link>
                <Link
                  to="/services/performance"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Performance Marketing
                </Link>
                <Link
                  to="/services/influencer"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Influencer Marketing
                </Link>
                <Link
                  to="/services/web-development"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Web Development
                </Link>
                <Link
                  to="/services/branding"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Branding & Identity
                </Link>
                <Link
                  to="/services/video"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Video Marketing
                </Link>
                <Link
                  to="/services/automation"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Marketing Automation
                </Link>
              </div>
            </div>
            {/* Mobile Business Dropdown */}
            <div>
              <button
                className="w-full text-left hover:text-accent flex items-center gap-1 transition-colors py-2"
                onClick={() => setShowBusiness(!showBusiness)}
                type="button"
                aria-haspopup="true"
                aria-expanded={showBusiness}
              >
                Business Solutions{" "}
                <span className="text-xs">{showBusiness ? "▲" : "▼"}</span>
              </button>
              <div
                className={`ml-2 mt-1 flex flex-col gap-1 transition-all duration-300 origin-top scale-95 opacity-0 max-h-0 overflow-hidden
                  ${
                    showBusiness
                      ? "scale-100 opacity-100 max-h-[500px] animate-dropdown"
                      : ""
                  }`}
              >
                <Link
                  to="/business-solutions/ecommerce"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  E-Commerce & D2C
                </Link>
                <Link
                  to="/business-solutions/retail"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  FMCG & Retail
                </Link>
                <Link
                  to="/business-solutions/finance"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Banking & Financial
                </Link>
                <Link
                  to="/business-solutions/startups"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Growth Startups
                </Link>
                <Link
                  to="/business-solutions/healthcare"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Healthcare
                </Link>
                <Link
                  to="/business-solutions/education"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Education
                </Link>
                <Link
                  to="/business-solutions/real-estate"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Real Estate
                </Link>
              </div>
            </div>
            {/* Mobile Company Dropdown */}
            <div>
              <button
                className="w-full text-left hover:text-accent flex items-center gap-1 transition-colors py-2"
                onClick={() => setShowCompany(!showCompany)}
                type="button"
                aria-haspopup="true"
                aria-expanded={showCompany}
              >
                Company{" "}
                <span className="text-xs">{showCompany ? "▲" : "▼"}</span>
              </button>
              <div
                className={`ml-2 mt-1 flex flex-col gap-1 transition-all duration-300 origin-top scale-95 opacity-0 max-h-0 overflow-hidden
                  ${
                    showCompany
                      ? "scale-100 opacity-100 max-h-[500px] animate-dropdown"
                      : ""
                  }`}
              >
                <Link
                  to="/faq"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  FAQ
                </Link>
                <Link
                  to="/about"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  About Us
                </Link>
                <Link
                  to="/testimonials"
                  className="hover:text-accent transition-colors py-1"
                  onClick={() => setIsMenuOpen(false)}
                >
                  Testimonials
                </Link>
              </div>
            </div>
            <Link
              to="/careers"
              className="hover:text-accent transition-colors py-2"
              onClick={() => setIsMenuOpen(false)}
            >
              Careers
            </Link>
            <Link
              to="/contact"
              className="hover:text-accent transition-colors py-2"
              onClick={() => setIsMenuOpen(false)}
            >
              Contact
            </Link>
            <Link
              to="/blog"
              className="hover:text-accent transition-colors py-2"
              onClick={() => setIsMenuOpen(false)}
            >
              Blog
            </Link>
          </nav>
        </div>
      )}

      {/* Animations */}
      <style>
  {`
    @keyframes dropdown {
      0% { opacity: 0; transform: scaleY(0.95) translateY(-10px);}
      100% { opacity: 1; transform: scaleY(1) translateY(0);}
    }
    .animate-dropdown {
      animation: dropdown 0.25s cubic-bezier(0.4,0,0.2,1) both;
    }
      .header {
  transition: background-color 0.3s ease;
}
  `}
</style>
    </header>
  );
};


export default Header;


